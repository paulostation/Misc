#INCLUDE <P16F628A.INC>	;MICROCHIP PIC16F628A DEFAULT INCLUDE FILE
	__CONFIG _BODEN_ON & _CP_OFF & _PWRTE_ON & _WDT_OFF & _WDT_OFF & _LVP_OFF & _MCLRE_OFF & _INTRC_OSC_NOCLKOUT

#DEFINE		BANK0	BCF STATUS,RP0	;SETS MEMORY BANK0
#DEFINE		BANK1	BSF	STATUS,RP0	;SETS MEMORY BANK1

;-------------------BUTTON DEFINES------------------------------------;
#DEFINE		MODE_BUTTON		PORTA,2		;MODE CHANGING BUTTON
#DEFINE		INC_BUTTON		PORTA,4		;INCREMENT BUTTON
#DEFINE		DEC_BUTTON		PORTA,6		;DECREMENT BUTTON

;-------------------PIN DEFINES---------------------------------------; 
#DEFINE		RELAY			PORTA,7		;PIN WHERE THE RELAY IS CONNECTED
#DEFINE		LED_CONFIG		PORTA,0		;LED THAT INDICATES CONFIG MODE
#DEFINE		LED_RUN			PORTA,1		;LED THAT INDICATES RUNNING MODE
#DEFINE		SENSOR			PORTA,3		;PIN WHERE THE CURRENT SENSOR IS CONNECTED
;-------------------FLAG DEFINES--------------------------------------;
#DEFINE 	MODE 			FLAGS,0		;USED TO DEFINE THE MODE (RUNNING OR CONFIGURATION)
#DEFINE		CHANGES_MADE	FLAGS,4		;INDICATES THAT CHANGES WERE MADE AND A DISPLAY UPDATE IS NEEDED

CBLOCK	0x20					

	REG_UNI				;STORES UNIT DISPLAY VALUE
	REG_TENS			;STORES TENS DISPLAY VALUE
	SHOWER_TEMP			;CONTROLS RELAY DELAY TIME BY USING DISPLAY VALUE
	FLAGS				;FLAG REGISTER
	

;---------------------DELAY BASED REGISTERS---------------------------;
	TEMP2			
	TEMP3	
	TEMP4	
	TEMP5
	TEMP6

ENDC	

	ORG 0x00					
	
	BANK0
	MOVLW	B'00000111'
	MOVWF	CMCON
	
	BANK1
	;CONFIGURE PORT A I/O
	MOVLW	B'01111100'
	MOVWF	TRISA
	;CONFIGURE PORT B I/O
	MOVLW	B'00000000'
	MOVWF	TRISB
	MOVLW	B'10000100'
	MOVWF	OPTION_REG
	;CONFIGURE INTERRUPTIONS REGISTER
	MOVLW	B'00000000'
	MOVWF	INTCON

	BANK0
;--------------------------------------VARIABLES DEFAULT VALUES---------------------------;
	BSF		CHANGES_MADE
	CLRF	REG_TENS
	CLRF	PORTA
	CLRF	PORTB
	CLRF	FLAGS
	CLRF	TEMP2
	CLRF	TEMP3	
	CLRF	TEMP4
	CLRF	TEMP5
	CLRF	TEMP6
	MOVLW	.30
	MOVWF	SHOWER_TEMP
	CLRF	REG_UNI
	MOVLW	.3
	MOVWF	REG_TENS
	GOTO	MAIN

;-------------------------------------1 SECOND DELAY ROUTINE------------------------------;	
_DL2
	MOVLW	.4
	MOVWF	TEMP4
	;TEMP4 = 4;

_DL3
	MOVLW	.250
	MOVWF	TEMP5
	;TEMP5 = 250;
_DL4
	MOVLW	.200
	MOVWF	TEMP6
	;TEMP6 = 200;
_DL5
	NOP
	NOP	
	DECFSZ	TEMP6,F
	GOTO	_DL5	
	DECFSZ	TEMP5,F	
	GOTO	_DL4
	DECFSZ	TEMP4,F
	GOTO	_DL3
	RETURN
;-------------------------------------10 SECOND DELAY ROUTINE------------------------------;	
DELAY10S	

	MOVLW	.40
	MOVWF	TEMP4
	
_DELAY250mS
	MOVLW	.250
	MOVWF	TEMP5

_DELAY200uS
	MOVLW	.200
	MOVWF	TEMP6

_DELAY5uS
	NOP
	NOP
	DECFSZ	TEMP6,F
	GOTO	_DELAY5uS
	DECFSZ	TEMP5,F	
	GOTO	_DELAY200uS
	DECFSZ	TEMP4,F
	GOTO	_DELAY250mS
	RETURN
;-------------------------------------MAIN DELAY ROUTINE------------------------------;	

DELAY

	MOVF	SHOWER_TEMP,W
	MOVWF	TEMP3

DL2

	;CHECK IF TEMP3 VALUE EQUALS 5 TO SIGNAL THAT TIME IS RUNNING OUT
	MOVLW	.5
	XORWF	TEMP3,W
	BTFSS	STATUS,Z
	;IF SO, TURN ON LED_RUN
	GOTO	$ + 2
	BSF		LED_RUN
	
	MOVLW	.4
	MOVWF	TEMP4
	
DL3
	MOVLW	.250
	MOVWF	TEMP5

DL4
	MOVLW	.200
	MOVWF	TEMP6

DL5	
	NOP
	NOP	
	DECFSZ	TEMP6,F
	GOTO	DL5	
	DECFSZ	TEMP5,F	
	GOTO	DL4
	DECFSZ	TEMP4,F
	GOTO	DL3
	DECFSZ	TEMP3,F
	GOTO	DL2
	
	RETURN
;----------------------------------INC AND DEC ROUTINES-----------------------;
INCREMENTO
	
	;SETS VALUE CHANGE FLAG
	BSF		CHANGES_MADE
	;TEST IF UNIT REGISTER EQUALS 9
	MOVLW	.9
	XORWF	REG_UNI,W
	BTFSS	STATUS,Z
	;IF SO, CLEAR UNIT REGISTER AND INCREMENT TENS REGISTER
	GOTO	UNIT_ISNT_NINE
	MOVLW	.9
	XORWF	REG_TENS,W
	BTFSS	STATUS,Z
	GOTO	ONLY_UNIT_IS_NINE
	;IF BOTH REGISTERS ARE 9, CLEAR EVERYTHING
	CLRF	REG_UNI
	CLRF	REG_TENS
	CLRF	SHOWER_TEMP
	RETURN

	ONLY_UNIT_IS_NINE
	;ONLY UNIT IS NINE, SO THE UNIT IS CLEARED AND THE TENS REGISTER IS INCREMENTED. ALSO, THE SHOWER_TEMP IS INCREMENTED TOO.
	MOVLW	.0
	MOVWF	REG_UNI
	INCF	REG_TENS,F
	INCF	SHOWER_TEMP,F
	RETURN

	UNIT_ISNT_NINE
	;IF THE UNIT ISN'T NINE, JUST INCREMENT UNIT AND SHOWER_TEMP
	INCF	SHOWER_TEMP,F
	INCF	REG_UNI,F
	RETURN

	
;------------------------------------------------------------------------------------------------------------ROTINA DE DECREMENTO NO REGISTRADOR REG_TENS E SHOWER_TEMP-----------------------;
DECREMENTO

	;SETS VALUE CHANGE FLAG
	BSF		CHANGES_MADE
	;TEST TO CHECK IF UNIT REGISTER EQUALS ZERO
	MOVLW	.0
	XORWF	REG_UNI,W
	BTFSS	STATUS,Z
	GOTO UNIT_ISNT_ZERO		
	;IF UNIT IS ZERO, MAKE ANOTHER TEST TO CHECK IF TENS REGISTER IS ZERO
	MOVLW	.0
	XORWF	REG_TENS,W
	BTFSS	STATUS,Z
	;IF NOT, JUST GO ON
	GOTO	$ + 2
	;IF SO, GO TO "BOTH_ARE_ZERO" CASE
	GOTO	BOTH_ARE_ZERO
	;ONLY UNIT IS ZERO, SO UNIT WILL BE 9 AND TENS, SHOWER_TEMP REGISTERS WILL BE DECREMENTED. LIKE GOING FROM 20 TO 19
	MOVLW	.9
	MOVWF	REG_UNI
	DECF	REG_TENS,F
	DECF	SHOWER_TEMP,F
	RETURN
	
	UNIT_ISNT_ZERO
	;IF UNIT REG ISN'T ZERO, DECREMENT UNIT AND SHOWER_TEMP
	DECF	REG_UNI,F
	DECF	SHOWER_TEMP,F
	RETURN

	BOTH_ARE_ZERO
	;BOTH ARE ZERO, SO UNIT AND TENS WILL BE 9, AND SHOWER_TEMP 99. LIKE GOING FROM 00 TO 99
	MOVLW	.9
	MOVWF	REG_UNI
	MOVLW	.9
	MOVWF	REG_TENS
	MOVLW	.99
	MOVWF	SHOWER_TEMP
	RETURN
	
MAIN
	CALL 	UPDATE_DISPLAY
	BTFSS	MODE_BUTTON
	GOTO 	RUNNING_MODE
	GOTO 	CONFIG_MODE

RUNNING_MODE
	
	;INDICATES RUNNING MODE BY CUTTING OFF CONFIGURATION LED AND TURNING ON RUN LED
	BCF		LED_CONFIG
	BSF		LED_RUN

	;IF MODE BUTTON WAS PRESSED
	BTFSS	MODE_BUTTON
	GOTO 	$ + 5
	;WAIT UNTIL BUTTON IS RELEASED
	BTFSS	MODE_BUTTON
	GOTO	$ + 2
	GOTO	$ - 2
	GOTO	CONFIG_MODE
	;TEST TO CHECK IF THERE IS CURRENT
	BTFSS	SENSOR
	;IF NOT, GO BACK TO THE ROUTINE BEGINNING
	GOTO	RUNNING_MODE       							    
 	;IF SO, TURN OFF RUNNING LED AND START DELAY
	BCF		LED_RUN
	CALL	DELAY	
	;AFTER DELAY ROUTINE IS DONE, TURN OFF THE LOAD
	BSF		RELAY
	;WAIT TEN SECONDS TO TURN ON
	CALL	DELAY10S
	BCF		RELAY
	GOTO	RUNNING_MODE
	
;--------------------------------------------------------------------------------------------------------------------------------------------ROTINA DE CONFIG_MODE-----------------------------;			
CONFIG_MODE
	
	FIRST_STEP
	;INDICATES RUNNING MODE BY CUTTING OFF RUN LED AND TURNING ON CONFIG LED
	BSF		LED_CONFIG
	BCF		LED_RUN

	SECOND_STEP
	;TEST IF INCREMENT BUTTON IS PRESSED
	BTFSS	INC_BUTTON
	GOTO 	THIRD_STEP
	;WAIT UNTIL BUTTON IS RELEASED
	BTFSS	INC_BUTTON
	GOTO	$ + 2
	GOTO	$ - 2
	CALL	INCREMENTO

	THIRD_STEP
	;TEST IF INCREMENT BUTTON IS PRESSED
	BTFSS	BOTAO_DEC
	GOTO 	FOURTH_STEP
	;WAIT UNTIL BUTTON IS RELEASED
	BTFSS	BOTAO_DEC
	GOTO	$ + 2
	GOTO	$ - 2
	CALL	DECREMENTO	

	FOURTH_STEP
	;UPDATE REGISTER VALUES INTO DISPLAY
	CALL	UPDATE_DISPLAY
	
	FIFTH_STEP

	BTFSS	MODE_BUTTON
	GOTO 	CONFIG_MODE
	;ESPERA QUE O BOTAO SEJA SOLTO
	BTFSS	MODE_BUTTON
	GOTO	$ + 2
	GOTO	$ - 2
	GOTO	RUNNING_MODE
			
UPDATE_DISPLAY
	;UPDATE_DISPLAY VALUE

	;TEST IF CHANGES WERE MADE
	BTFSS	CHANGES_MADE
	;IF NOT, RETURN
	RETURN
	;IF SO, CLEAR PORT B, TO START THE DISPLAY UPDATE
	CLRF	PORTB

	;FIRST HALF, UNIT DISPLAY
	BTFSS	REG_UNI,0
	GOTO	$ + 2
	BSF		PORTB,0
	BTFSS	REG_UNI,1
	GOTO	$ + 2
	BSF		PORTB,1
	BTFSS	REG_UNI,2
	GOTO	$ + 2
	BSF		PORTB,2
	BTFSS	REG_UNI,3
	GOTO	$ + 2
	BSF		PORTB,3

	;SECOND HALF TENS DISPLAY
	BTFSS	REG_TENS,0
	GOTO	$ + 2
	BSF		PORTB,4
	BTFSS	REG_TENS,1
	GOTO	$ + 2
	BSF		PORTB,5
	BTFSS	REG_TENS,2
	GOTO	$ + 2
	BSF		PORTB,6
	BTFSS	REG_TENS,3
	GOTO	$ + 2
	BSF		PORTB,7
	;CLEARS CHANGES FLAG, BECAUSE THE CHANGES WERE APPLIED
	BCF		CHANGES_MADE
	RETURN

	END